@tailwind base;
@tailwind components;
@tailwind utilities;
@import './fonts.css';

@layer base {
  * {
    @apply border-gray-700;
  }
  body {
    @apply bg-black text-white;
    background: #000000;
    font-family: var(--font-orbitron), -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', sans-serif;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    text-rendering: optimizeLegibility;
  }
  code, pre, .font-mono {
    font-family: var(--font-mono), 'Courier New', Courier, monospace;
  }
}

@layer components {
  .battlezone-grid {
    background-image: 
      linear-gradient(rgba(147, 51, 234, 0.2) 1px, transparent 1px),
      linear-gradient(90deg, rgba(147, 51, 234, 0.2) 1px, transparent 1px);
    background-size: 20px 20px;
    animation: grid-flow 10s linear infinite;
  }
  
  .hex-pattern {
    background-image: 
      radial-gradient(circle at 50% 50%, rgba(147, 51, 234, 0.2) 2px, transparent 3px);
    background-size: 40px 40px;
    background-position: 0 0, 20px 20px;
  }

  /* 3D Perspective Grid Background */
  .container-loader {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    transform-style: preserve-3d;
    overflow: hidden;
    transform: translateX(0%);
    animation: perspective 20s linear infinite both;
    z-index: -1;
  }

  .container-loader .loader {
    height: 100%;
    width: 100%;
    --color: #9333ea;
    position: absolute;
    background: repeating-linear-gradient(
        transparent 0 30px,
        var(--color) 31px 32px
      ),
      repeating-linear-gradient(
        to right,
        transparent 0 30px,
        var(--color) 31px 32px
      );
    border-left: 1px solid var(--color);
    border-top: 1px solid var(--color);
    transform: rotateX(37deg);
    top: 0;
    opacity: 0.25;
  }
  
  .sharp-text {
    font-weight: 700;
    letter-spacing: 0.5px;
    text-shadow: 1px 1px 0px rgba(0,0,0,0.8);
  }
  
  .glass-panel {
    background: rgba(20, 20, 30, 0.85);
    border: 1px solid rgba(147, 51, 234, 0.3);
    border-top: 1px solid rgba(147, 51, 234, 0.5);
    border-left: 1px solid rgba(147, 51, 234, 0.4);
    box-shadow: 
      inset 1px 1px 0px rgba(255,255,255,0.1),
      inset -1px -1px 0px rgba(0,0,0,0.3),
      0 4px 8px rgba(0, 0, 0, 0.4);
  }

  .cyber-border {
    border: 2px solid #9333ea;
    border-top: 2px solid #a855f7;
    border-left: 2px solid #a855f7;
    border-bottom: 2px solid #7c3aed;
    border-right: 2px solid #7c3aed;
    box-shadow: 
      inset 1px 1px 0px rgba(168, 85, 247, 0.3),
      inset -1px -1px 0px rgba(124, 58, 237, 0.3);
  }

  .beveled-card {
    background: linear-gradient(135deg, rgba(30,30,40,0.95) 0%, rgba(20,20,30,0.95) 100%);
    border: 1px solid rgba(147, 51, 234, 0.3);
    border-top: 1px solid rgba(147, 51, 234, 0.6);
    border-left: 1px solid rgba(147, 51, 234, 0.5);
    border-bottom: 1px solid rgba(147, 51, 234, 0.2);
    border-right: 1px solid rgba(147, 51, 234, 0.2);
    box-shadow: 
      inset 2px 2px 4px rgba(255,255,255,0.05),
      inset -2px -2px 4px rgba(0,0,0,0.2),
      0 4px 12px rgba(0, 0, 0, 0.3);
  }

  .sharp-button {
    background: linear-gradient(135deg, rgba(147, 51, 234, 0.9) 0%, rgba(124, 58, 237, 0.8) 100%);
    border: 2px solid #9333ea;
    border-top: 2px solid #a855f7;
    border-left: 2px solid #a855f7;
    border-bottom: 2px solid #7c3aed;
    border-right: 2px solid #7c3aed;
    box-shadow: 
      inset 1px 1px 0px rgba(255,255,255,0.2),
      inset -1px -1px 0px rgba(0,0,0,0.3),
      0 2px 4px rgba(0, 0, 0, 0.4);
    transition: all 0.2s ease;
  }

  .sharp-button:hover {
    background: linear-gradient(135deg, rgba(147, 51, 234, 1) 0%, rgba(124, 58, 237, 0.9) 100%);
    transform: translateY(-1px);
    box-shadow: 
      inset 1px 1px 0px rgba(255,255,255,0.3),
      inset -1px -1px 0px rgba(0,0,0,0.4),
      0 4px 8px rgba(0, 0, 0, 0.5);
  }

  .sharp-button:active {
    transform: translateY(0px);
    box-shadow: 
      inset 2px 2px 4px rgba(0,0,0,0.4),
      inset -1px -1px 0px rgba(255,255,255,0.1);
  }

  /* Hexagonal Module Styles */
  .hexagon-module {
    position: relative;
    clip-path: polygon(25% 0%, 75% 0%, 100% 50%, 75% 100%, 25% 100%, 0% 50%);
    background: linear-gradient(135deg, rgba(30,30,40,0.95) 0%, rgba(20,20,30,0.95) 100%);
    box-shadow: 
      0 4px 12px rgba(0, 0, 0, 0.4),
      inset 1px 1px 0px rgba(255,255,255,0.1);
    transition: all 0.3s ease;
  }

  .hexagon-module:hover {
    transform: scale(1.05);
    box-shadow: 
      0 6px 16px rgba(0, 0, 0, 0.5),
      inset 1px 1px 0px rgba(255,255,255,0.2);
  }

  .hexagon-module::before {
    content: '';
    position: absolute;
    top: 2px;
    left: 2px;
    right: 2px;
    bottom: 2px;
    clip-path: polygon(25% 0%, 75% 0%, 100% 50%, 75% 100%, 25% 100%, 0% 50%);
    background: linear-gradient(135deg, rgba(40,40,50,0.8) 0%, rgba(20,20,30,0.9) 100%);
  }
}

@keyframes grid-flow {
  0% { transform: translateY(0); }
  100% { transform: translateY(20px); }
}

@keyframes pulse-glow {
  0%, 100% { 
    filter: drop-shadow(0 0 5px currentColor);
  }
  50% { 
    filter: drop-shadow(0 0 20px currentColor) drop-shadow(0 0 30px currentColor);
  }
}

@keyframes perspective {
  0% {
    perspective: 1px;
  }
  100% {
    perspective: 50px;
  }
}

/* Glitch Button CSS */
.glitch-btn {
  position: relative;
  padding: 12px 24px;
  background: transparent;
  border: 2px solid #9333ea;
  color: #9333ea;
  font-family: var(--font-mono), 'JetBrains Mono', monospace;
  font-weight: 700;
  text-transform: uppercase;
  letter-spacing: 1px;
  cursor: pointer;
  transition: all 0.3s ease;
  overflow: hidden;
}

.glitch-btn::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(147, 51, 234, 0.2), transparent);
  transition: left 0.5s;
}

.glitch-btn:hover::before {
  left: 100%;
}

.glitch-btn:hover {
  background: rgba(147, 51, 234, 0.1);
  box-shadow: 0 0 20px #9333ea;
  transform: translateY(-2px);
}

.glitch-btn:active {
  transform: translateY(0);
}

/* Glitch Text Effect */
.glitch-text {
  position: relative;
  color: #9333ea;
  font-family: var(--font-mono), 'JetBrains Mono', monospace;
}

.glitch-text::before,
.glitch-text::after {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.glitch-text::before {
  animation: glitch-anim-1 0.3s infinite linear alternate-reverse;
  color: #7c3aed;
  z-index: -1;
}

.glitch-text::after {
  animation: glitch-anim-2 0.3s infinite linear alternate-reverse;
  color: #a855f7;
  z-index: -2;
}

@keyframes glitch-anim-1 {
  0% {
    clip-path: inset(40% 0 61% 0);
  }
  20% {
    clip-path: inset(92% 0 1% 0);
  }
  40% {
    clip-path: inset(43% 0 1% 0);
  }
  60% {
    clip-path: inset(25% 0 58% 0);
  }
  80% {
    clip-path: inset(54% 0 7% 0);
  }
  100% {
    clip-path: inset(58% 0 43% 0);
  }
}

@keyframes glitch-anim-2 {
  0% {
    clip-path: inset(25% 0 58% 0);
  }
  20% {
    clip-path: inset(54% 0 7% 0);
  }
  40% {
    clip-path: inset(58% 0 43% 0);
  }
  60% {
    clip-path: inset(40% 0 61% 0);
  }
  80% {
    clip-path: inset(92% 0 1% 0);
  }
  100% {
    clip-path: inset(43% 0 1% 0);
  }
}

/* Hexagon Animation Keyframes */
@keyframes hexPulse {
  0%, 100% {
    opacity: 0.8;
    transform: scale(1);
  }
  50% {
    opacity: 1;
    transform: scale(1.05);
  }
}

.hex-pulse {
  animation: hexPulse 2s ease-in-out infinite;
}

/* Orbital Animation */
@keyframes orbit {
  from {
    transform: rotate(0deg) translateX(120px) rotate(0deg);
  }
  to {
    transform: rotate(360deg) translateX(120px) rotate(-360deg);
  }
}

.orbital-label {
  animation: orbit 20s linear infinite;
}